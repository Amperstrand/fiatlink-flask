# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class InlineResponseMap200(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, amount_fiat: int=None, currency_id: int=None, payment_option_id: int=None, amount_sats: int=None, btc_price: int=None, order_fee: int=None, order_status: str=None, order_status_date: datetime=None):  # noqa: E501
        """InlineResponseMap200 - a model defined in Swagger

        :param amount_fiat: The amount_fiat of this InlineResponseMap200.  # noqa: E501
        :type amount_fiat: int
        :param currency_id: The currency_id of this InlineResponseMap200.  # noqa: E501
        :type currency_id: int
        :param payment_option_id: The payment_option_id of this InlineResponseMap200.  # noqa: E501
        :type payment_option_id: int
        :param amount_sats: The amount_sats of this InlineResponseMap200.  # noqa: E501
        :type amount_sats: int
        :param btc_price: The btc_price of this InlineResponseMap200.  # noqa: E501
        :type btc_price: int
        :param order_fee: The order_fee of this InlineResponseMap200.  # noqa: E501
        :type order_fee: int
        :param order_status: The order_status of this InlineResponseMap200.  # noqa: E501
        :type order_status: str
        :param order_status_date: The order_status_date of this InlineResponseMap200.  # noqa: E501
        :type order_status_date: datetime
        """
        self.swagger_types = {
            'amount_fiat': int,
            'currency_id': int,
            'payment_option_id': int,
            'amount_sats': int,
            'btc_price': int,
            'order_fee': int,
            'order_status': str,
            'order_status_date': datetime
        }

        self.attribute_map = {
            'amount_fiat': 'amount_fiat',
            'currency_id': 'currency_id',
            'payment_option_id': 'payment_option_id',
            'amount_sats': 'amount_sats',
            'btc_price': 'btc_price',
            'order_fee': 'order_fee',
            'order_status': 'order_status',
            'order_status_date': 'order_status_date'
        }
        self._amount_fiat = amount_fiat
        self._currency_id = currency_id
        self._payment_option_id = payment_option_id
        self._amount_sats = amount_sats
        self._btc_price = btc_price
        self._order_fee = order_fee
        self._order_status = order_status
        self._order_status_date = order_status_date

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponseMap200':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_map200 of this InlineResponseMap200.  # noqa: E501
        :rtype: InlineResponseMap200
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount_fiat(self) -> int:
        """Gets the amount_fiat of this InlineResponseMap200.


        :return: The amount_fiat of this InlineResponseMap200.
        :rtype: int
        """
        return self._amount_fiat

    @amount_fiat.setter
    def amount_fiat(self, amount_fiat: int):
        """Sets the amount_fiat of this InlineResponseMap200.


        :param amount_fiat: The amount_fiat of this InlineResponseMap200.
        :type amount_fiat: int
        """

        self._amount_fiat = amount_fiat

    @property
    def currency_id(self) -> int:
        """Gets the currency_id of this InlineResponseMap200.


        :return: The currency_id of this InlineResponseMap200.
        :rtype: int
        """
        return self._currency_id

    @currency_id.setter
    def currency_id(self, currency_id: int):
        """Sets the currency_id of this InlineResponseMap200.


        :param currency_id: The currency_id of this InlineResponseMap200.
        :type currency_id: int
        """

        self._currency_id = currency_id

    @property
    def payment_option_id(self) -> int:
        """Gets the payment_option_id of this InlineResponseMap200.


        :return: The payment_option_id of this InlineResponseMap200.
        :rtype: int
        """
        return self._payment_option_id

    @payment_option_id.setter
    def payment_option_id(self, payment_option_id: int):
        """Sets the payment_option_id of this InlineResponseMap200.


        :param payment_option_id: The payment_option_id of this InlineResponseMap200.
        :type payment_option_id: int
        """

        self._payment_option_id = payment_option_id

    @property
    def amount_sats(self) -> int:
        """Gets the amount_sats of this InlineResponseMap200.


        :return: The amount_sats of this InlineResponseMap200.
        :rtype: int
        """
        return self._amount_sats

    @amount_sats.setter
    def amount_sats(self, amount_sats: int):
        """Sets the amount_sats of this InlineResponseMap200.


        :param amount_sats: The amount_sats of this InlineResponseMap200.
        :type amount_sats: int
        """

        self._amount_sats = amount_sats

    @property
    def btc_price(self) -> int:
        """Gets the btc_price of this InlineResponseMap200.


        :return: The btc_price of this InlineResponseMap200.
        :rtype: int
        """
        return self._btc_price

    @btc_price.setter
    def btc_price(self, btc_price: int):
        """Sets the btc_price of this InlineResponseMap200.


        :param btc_price: The btc_price of this InlineResponseMap200.
        :type btc_price: int
        """

        self._btc_price = btc_price

    @property
    def order_fee(self) -> int:
        """Gets the order_fee of this InlineResponseMap200.


        :return: The order_fee of this InlineResponseMap200.
        :rtype: int
        """
        return self._order_fee

    @order_fee.setter
    def order_fee(self, order_fee: int):
        """Sets the order_fee of this InlineResponseMap200.


        :param order_fee: The order_fee of this InlineResponseMap200.
        :type order_fee: int
        """

        self._order_fee = order_fee

    @property
    def order_status(self) -> str:
        """Gets the order_status of this InlineResponseMap200.


        :return: The order_status of this InlineResponseMap200.
        :rtype: str
        """
        return self._order_status

    @order_status.setter
    def order_status(self, order_status: str):
        """Sets the order_status of this InlineResponseMap200.


        :param order_status: The order_status of this InlineResponseMap200.
        :type order_status: str
        """

        self._order_status = order_status

    @property
    def order_status_date(self) -> datetime:
        """Gets the order_status_date of this InlineResponseMap200.


        :return: The order_status_date of this InlineResponseMap200.
        :rtype: datetime
        """
        return self._order_status_date

    @order_status_date.setter
    def order_status_date(self, order_status_date: datetime):
        """Sets the order_status_date of this InlineResponseMap200.


        :param order_status_date: The order_status_date of this InlineResponseMap200.
        :type order_status_date: datetime
        """

        self._order_status_date = order_status_date
